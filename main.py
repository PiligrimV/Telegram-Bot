import telebot, os
from dotenv import load_dotenv
from telebot import types
from PIL import Image

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–ª—Ñ–∞–≤–∏—Ç–∞
alphabet = os.getenv('ALPHABET')

#########################################
#########################################

user_states = {}

def set_user_state(chat_id, state):
    user_states[chat_id] = state

def get_user_state(chat_id):
    return user_states.get(chat_id, "normal")

#########################################
#########################################

# –§—É–Ω–∫—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∫–∏
def encode(text, output_image_path):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_size_x = len(alphabet)
    image_size_y = len(text) + 20
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    encoded_image = Image.new("RGB", (image_size_x, image_size_y), color="white")
    
    # –ö–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –µ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    for i, char in enumerate(text):
        x = int(alphabet.find(char))
        y = i
        encoded_image.putpixel((x, y), (0, 0, 0))  # –ó–∞–¥–∞–µ–º –ø–∏–∫—Å–µ–ª—å
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    encoded_image.save(output_image_path, quality=100)

# –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—à—Ç—Ñ—Ä–æ–≤–∫–∏
def decode(input_image_path):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    encoded_image = Image.open(input_image_path)
    width, height = encoded_image.size
    decoded_text = ""
    
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —á–µ—Ä–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for y in range(height):
        for x in range(width):
            pixel = encoded_image.getpixel((x, y))
            if pixel == (0, 0, 0):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–∏–∫—Å–µ–ª—å —á–µ—Ä–Ω—ã–º
                char_index = x  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É x –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞
                decoded_text += alphabet[char_index % len(alphabet)]
    
    return decoded_text

#########################################
#########################################

bot = telebot.TeleBot(os.getenv('TOKEN'))

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üõ†Ô∏è–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
    item2 = types.KeyboardButton('üíª–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
    item3 = types.KeyboardButton('‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥', reply_markup = markup)

    set_user_state(message.chat.id, "normal")

@bot.message_handler(content_types=['text', 'document'])
def bot_commands(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state = get_user_state(message.chat.id)

    if user_state == "waiting_for_input":
        if message.content_type == 'text':
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
            text_to_encode = message.text
            output_image_path = f"{message.chat.id}_encoded_image.jpg"  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG
            encode(text_to_encode, output_image_path)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            with open(output_image_path, "rb") as image_file:
                bot.send_document(message.chat.id, image_file)

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            os.remove(output_image_path)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
            set_user_state(message.chat.id, "normal")
        
        elif message.content_type == 'document':
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∏–Ω–∫–µ
            file_id = message.document.file_id
            file_info = bot.get_file(file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            image_path = f"{message.chat.id}_decode_image.jpg"  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
            with open(image_path, 'wb') as new_file:
                new_file.write(downloaded_file)

            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            decoded_text = decode(image_path)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            bot.send_message(message.chat.id, f"–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {decoded_text}")

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            os.remove(image_path)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
            set_user_state(message.chat.id, "normal")

    if message.text == 'SOONAMI':
        bot.send_message.chat.id, '–ë–æ—Ç —Å–æ–∑–¥–∞–Ω SOONAMI STUDIOS'
    elif message.text == '‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('ü§ñ–û –ë–æ—Ç–µ')
        item2 = types.KeyboardButton('üë®üèª‚Äçüíª–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
        back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        markup.add(item1, item2, back)
    
        bot.send_message(message.chat.id, '‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', reply_markup = markup)

    elif message.text == 'ü§ñ–û –ë–æ—Ç–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        markup.add(back)
    
        bot.send_message(message.chat.id, 'Versions 1.0.0, –ë–æ—Ç —Å–æ–∑–¥–∞–Ω SOONAMI STUDIOS vk.com/soonami.group', reply_markup = markup)
    
    elif message.text == 'üë®üèª‚Äçüíª–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        markup.add(back)
    
        bot.send_message(message.chat.id, '‚úèÔ∏èVK: vk.com/soonami.group', reply_markup = markup)
    
    elif message.text == 'üíª–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('üõ†Ô∏è–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item2 = types.KeyboardButton('üíª–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item3 = types.KeyboardButton('‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        markup.add(item1, item2, item3)

        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –±–µ–∑ —Å–∂–∞—Ç–∏—è', reply_markup = markup)

        set_user_state(message.chat.id, "waiting_for_input")
        
    elif message.text == 'üõ†Ô∏è–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('üõ†Ô∏è–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item2 = types.KeyboardButton('üíª–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item3 = types.KeyboardButton('‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        markup.add(item1, item2, item3)

        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç', reply_markup = markup)

        set_user_state(message.chat.id, "waiting_for_input")
                
    elif message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('üõ†Ô∏è–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item2 = types.KeyboardButton('üíª–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å')
        item3 = types.KeyboardButton('‚ö†Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        markup.add(item1, item2, item3)

        bot.send_message(message.chat.id, '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', reply_markup = markup)
            
bot.polling()
